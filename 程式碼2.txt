#include "SevSeg.h"
SevSeg sevseg; //Instantiate a seven segment controller object
  static unsigned long timer = millis();
  static int deciSeconds = 0;
  byte a=0;
  byte i;
  byte b=0;
  byte Pin6= digitalRead(6);
void setup() {
  byte numDigits = 4;
  byte digitPins[] = {2, 3, 4, 5};
  byte segmentPins[] = { 8, 9, 10, 11, 12, 13,14,15};
  bool resistorsOnSegments = false; // 'false' means resistors are on digit pins
  byte hardwareConfig = COMMON_CATHODE; // See README.md for options
  bool updateWithDelays = false; // Default. Recommended
  bool leadingZeros = false; // Use 'true' if you'd like to keep the leading zeros
  
  sevseg.begin(hardwareConfig, numDigits, digitPins, segmentPins, resistorsOnSegments, updateWithDelays, leadingZeros);
  sevseg.setBrightness(90);
  Serial.begin(9600);
  
}

void loop() {


  if (millis() - timer >= 100) {
    timer += 100;
    deciSeconds++; // 100 milliSeconds is equal to 1 deciSecond
    
    b=deciSeconds%100;
    if (b % 60 == 0)
    {
        a++;
        deciSeconds=0;
        Serial.println(a);
        for(i=0;i<a;i++)
        deciSeconds+=100;
    }
    if (deciSeconds == 2359) { // Reset to 0 after counting for 1000 seconds.
      deciSeconds=0;
    }
    sevseg.setNumber(deciSeconds);
  }
  if(Pin6 == LOW)
 {
  deciSeconds = 0;
 }
  sevseg.refreshDisplay(); // Must run repeatedly
}